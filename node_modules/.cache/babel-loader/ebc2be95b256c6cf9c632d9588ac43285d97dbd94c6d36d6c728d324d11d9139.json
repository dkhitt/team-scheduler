{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Documents\\\\team-scheduler\\\\src\\\\ScheduleGrid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst days = [{\n  name: \"Saturday\",\n  date: \"01/04/2025\"\n}, {\n  name: \"Sunday\",\n  date: \"01/05/2025\"\n}, {\n  name: \"Monday\",\n  date: \"01/06/2025\"\n}, {\n  name: \"Tuesday\",\n  date: \"01/07/2025\"\n}, {\n  name: \"Wednesday\",\n  date: \"01/08/2025\"\n}, {\n  name: \"Thursday\",\n  date: \"01/09/2025\"\n}, {\n  name: \"Friday\",\n  date: \"01/10/2025\"\n}];\nconst jobColors = {\n  \"MILLEMORE SIGMA - 243962\": \"#FFD700\",\n  \"CAPSTONE AC03 - 233831\": \"#87CEFA\",\n  \"ASH MULTI BLDG\": \"#90EE90\"\n};\nconst initialJobs = {\n  \"Leo Garcia\": [{\n    job: \"MILLEMORE SIGMA - 243962\",\n    time: \"7:00 AM - 3:30 PM\"\n  }, {}, {}, {}, {}, {}, {}],\n  \"Daniel Hitt\": [{}, {}, {\n    job: \"CAPSTONE AC03 - 233831\",\n    time: \"7:00 AM - 3:30 PM\"\n  }, {\n    job: \"CAPSTONE AC03 - 233831\",\n    time: \"7:00 AM - 3:30 PM\"\n  }, {\n    job: \"CAPSTONE AC03 - 233831\",\n    time: \"7:00 AM - 3:30 PM\"\n  }, {\n    job: \"ASH MULTI BLDG\",\n    time: \"7:00 AM - 3:30 PM\"\n  }, {\n    job: \"CAPSTONE AC03 - 233831\",\n    time: \"7:00 AM - 3:30 PM\"\n  }],\n  \"Maria Lopez\": [{}, {}, {\n    job: \"ASH MULTI BLDG\",\n    time: \"7:00 AM - 3:30 PM\"\n  }, {\n    job: \"ASH MULTI BLDG\",\n    time: \"7:00 AM - 3:30 PM\"\n  }, {}, {}, {}]\n};\nexport default function ScheduleGrid() {\n  _s();\n  const [team, setTeam] = useState(Object.keys(initialJobs));\n  const [jobs, setJobs] = useState(initialJobs);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: \"1.5rem\",\n        fontWeight: \"bold\"\n      },\n      children: \"Weekly Team Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(8, 1fr)\",\n        gap: \"0.5rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: \"bold\",\n          textAlign: \"center\"\n        },\n        children: \"Team Member\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), days.map((day, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          background: \"#eee\",\n          padding: \"4px\",\n          borderRadius: \"4px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: day.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: \"0.8rem\",\n            color: \"#555\"\n          },\n          children: day.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)), team.map((member, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: \"#eee\",\n            padding: \"4px\",\n            textAlign: \"center\",\n            borderRadius: \"4px\"\n          },\n          children: member\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), jobs[member].map((entry, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: jobColors[entry.job] || \"#f9f9f9\",\n            padding: \"4px\",\n            textAlign: \"center\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\",\n            minHeight: \"60px\"\n          },\n          children: entry.job ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: \"0.75rem\",\n                fontWeight: \"bold\"\n              },\n              children: entry.job\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: \"0.7rem\"\n              },\n              children: entry.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              fontSize: \"0.8rem\"\n            },\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this)\n        }, j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(ScheduleGrid, \"K3JGLpjXYSDo7FQWFIOr7RtWk5I=\");\n_c = ScheduleGrid;\nvar _c;\n$RefreshReg$(_c, \"ScheduleGrid\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","days","name","date","jobColors","initialJobs","job","time","ScheduleGrid","_s","team","setTeam","Object","keys","jobs","setJobs","style","padding","children","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","textAlign","map","day","i","background","borderRadius","color","member","entry","j","border","minHeight","_c","$RefreshReg$"],"sources":["C:/Users/danie/Documents/team-scheduler/src/ScheduleGrid.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst days = [\n  { name: \"Saturday\", date: \"01/04/2025\" },\n  { name: \"Sunday\", date: \"01/05/2025\" },\n  { name: \"Monday\", date: \"01/06/2025\" },\n  { name: \"Tuesday\", date: \"01/07/2025\" },\n  { name: \"Wednesday\", date: \"01/08/2025\" },\n  { name: \"Thursday\", date: \"01/09/2025\" },\n  { name: \"Friday\", date: \"01/10/2025\" }\n];\n\nconst jobColors = {\n  \"MILLEMORE SIGMA - 243962\": \"#FFD700\",\n  \"CAPSTONE AC03 - 233831\": \"#87CEFA\",\n  \"ASH MULTI BLDG\": \"#90EE90\"\n};\n\nconst initialJobs = {\n  \"Leo Garcia\": [{ job: \"MILLEMORE SIGMA - 243962\", time: \"7:00 AM - 3:30 PM\" }, {}, {}, {}, {}, {}, {}],\n  \"Daniel Hitt\": [{}, {}, { job: \"CAPSTONE AC03 - 233831\", time: \"7:00 AM - 3:30 PM\" }, { job: \"CAPSTONE AC03 - 233831\", time: \"7:00 AM - 3:30 PM\" }, { job: \"CAPSTONE AC03 - 233831\", time: \"7:00 AM - 3:30 PM\" }, { job: \"ASH MULTI BLDG\", time: \"7:00 AM - 3:30 PM\" }, { job: \"CAPSTONE AC03 - 233831\", time: \"7:00 AM - 3:30 PM\" }],\n  \"Maria Lopez\": [{}, {}, { job: \"ASH MULTI BLDG\", time: \"7:00 AM - 3:30 PM\" }, { job: \"ASH MULTI BLDG\", time: \"7:00 AM - 3:30 PM\" }, {}, {}, {}]\n};\n\nexport default function ScheduleGrid() {\n  const [team, setTeam] = useState(Object.keys(initialJobs));\n  const [jobs, setJobs] = useState(initialJobs);\n\n  return (\n    <div style={{ padding: \"1rem\" }}>\n      <h1 style={{ fontSize: \"1.5rem\", fontWeight: \"bold\" }}>Weekly Team Schedule</h1>\n      <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(8, 1fr)\", gap: \"0.5rem\" }}>\n        <div style={{ fontWeight: \"bold\", textAlign: \"center\" }}>Team Member</div>\n        {days.map((day, i) => (\n          <div key={i} style={{ textAlign: \"center\", background: \"#eee\", padding: \"4px\", borderRadius: \"4px\" }}>\n            <div>{day.name}</div>\n            <div style={{ fontSize: \"0.8rem\", color: \"#555\" }}>{day.date}</div>\n          </div>\n        ))}\n        {team.map((member, i) => (\n          <React.Fragment key={i}>\n            <div style={{ background: \"#eee\", padding: \"4px\", textAlign: \"center\", borderRadius: \"4px\" }}>\n              {member}\n            </div>\n            {jobs[member].map((entry, j) => (\n              <div\n                key={j}\n                style={{\n                  background: jobColors[entry.job] || \"#f9f9f9\",\n                  padding: \"4px\",\n                  textAlign: \"center\",\n                  border: \"1px solid #ccc\",\n                  borderRadius: \"4px\",\n                  minHeight: \"60px\"\n                }}\n              >\n                {entry.job ? (\n                  <>\n                    <div style={{ fontSize: \"0.75rem\", fontWeight: \"bold\" }}>{entry.job}</div>\n                    <div style={{ fontSize: \"0.7rem\" }}>{entry.time}</div>\n                  </>\n                ) : (\n                  <button style={{ fontSize: \"0.8rem\" }}>+</button>\n                )}\n              </div>\n            ))}\n          </React.Fragment>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}